{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["ExpandMore","styled","props","expand","other","Object","objectWithoutProperties","react_default","a","createElement","IconButton","_ref","theme","transform","marginLeft","transition","transitions","create","duration","shortest","Recipe","_ref2","title","calories","image","ingredients","url","_useState","useState","_useState2","slicedToArray","expanded","setExpanded","Card","sx","maxWidth","CardHeader","CardMedia","component","height","alt","Link","href","CardActions","disableSpacing","Recipe_ExpandMore","onClick","aria-expanded","aria-label","ExpandMore_default","Collapse","in","timeout","unmountOnExit","CardContent","map","ingredient","Typography","key","text","App","recipes","setRecipes","_useState3","_useState4","search","setSearch","_useState5","_useState6","query","setQuery","concat","getRecipe","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","hits","console","log","stop","apply","this","arguments","useEffect","className","aria-current","react_select_esm","styles","control","_","width","selectProps","onChange","e","options","value","label","id","onSubmit","preventDefault","type","placeholder","target","recipe","src_Recipe","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.32419cb4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport Link from '@mui/material/Link';\r\n\r\nconst ExpandMore = styled((props) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\r\n  marginLeft: \"auto\",\r\n  transition: theme.transitions.create(\"transform\", {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\nconst Recipe = ({ title, calories, image, ingredients, url}) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Card sx={{ maxWidth: 320 }}>\r\n        <CardHeader title={title} />\r\n        <CardMedia component=\"img\" height=\"194\" image={image} alt={title} />\r\n        <div><b>Calories: </b>{calories}</div>\r\n        <Link href={url}>Recipe Link</Link>\r\n        <div>{Recipe}</div>\r\n\r\n        <CardActions disableSpacing>\r\n          <div>Ingredients</div>\r\n\r\n          <ExpandMore\r\n            expand={expanded}\r\n            onClick={handleExpandClick}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMoreIcon />\r\n          </ExpandMore>\r\n        </CardActions>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            {ingredients.map((ingredient) => (\r\n              <Typography key={ingredient}>\r\n                <li>{ingredient.text}</li>\r\n              </Typography>\r\n            ))}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default Recipe;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Recipe from \"./Recipe\";\nimport Select from \"react-select\";\nfunction App() {\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  const APP_ID = \"4574d7ab\";\n  const APP_KEY = \"96792a5f0d4daeaab117939b40988ca6\";\n  const url = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n  const getRecipe = async () => {\n    const response = await axios.get(url);\n    setRecipes(response.data.hits);\n    console.log(response.data.hits);\n  };\n  useEffect(() => {\n    getRecipe();\n  }, [query]);\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n  const updateQuery = (e) => {\n    e.preventDefault();\n    setQuery(search);\n  };\n  const UpdateSelectedOption = (e) => {\n    setQuery(e[\"value\"]);\n  };\n\n  const options = [\n    { value: \"Breakfast\", label: \"Breakfast\" },\n    { value: \"Lunch\", label: \"Lunch\" },\n    { value: \"Dinner\", label: \"Dinner\" },\n    { value: \"Snack\", label: \"Snack\" },\n    { value: \"Teatime\", label: \"Teatime\" },\n    { value: \"Alcohol-cocktail\", label: \"Alcohol-cocktail\" },\n    { value: \"Bread\", label: \"Bread\" },\n    { value: \"Biscuits and cookies\", label: \"Biscuits and cookies\" },\n    { value: \"Drinks\", label: \"\tDrinks\" },\n    { value: \"\tDesserts\", label: \"\tDesserts\" },\n    { value: \"\tEgg\", label: \"\tEgg\" },\n    { value: \"Main course\", label: \"Main course\" },\n    { value: \"\t\tOmelet\", label: \"\t\tOmelet\" },\n    { value: \"\tPancake\", label: \"\tPancake\" },\n    { value: \"\tPreps\", label: \"\tPreps\" },\n    { value: \"\tPreserve\", label: \"\tPreserve\" },\n    { value: \"\tSalad\", label: \"\tSalad\" },\n    { value: \"\t\tSandwiches\", label: \"\t\tSandwiches\" },\n    { value: \"\tSoup\", label: \"\tSoup\" },\n    { value: \"\t\tStarter\", label: \"\t\tStarter\" },\n    { value: \"\tAmerican\", label: \"\tAmerican\" },\n    { value: \"\tAsian\", label: \"\tAsian\" },\n    { value: \"\tBritish  \", label: \"\tBritish\" },\n    { value: \"\tChinese\", label: \"\tChinese\" },\n    { value: \"\tFrench\", label: \"\tFrench\" },\n    { value: \"\tIndian\", label: \"\tIndian\" },\n    { value: \"\tItalian\", label: \"\tItalian\" },\n    { value: \"\tJapanese\", label: \"\tJapanese\" },\n    { value: \"\tMexican    \", label: \"\tMexican\" },\n  ];\n  const customStyles = {\n    control: (_, { selectProps: { width }}) => ({\n      width: width\n    })};\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <div className=\"container-fluid\">\n          <nav className=\"navbar navbar-expand-lg\">\n            <a className=\"navbar-brand\" href=\"index.html\">\n              <h2>Food Recipe</h2>\n            </a>\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"index.html\">\n                  <h5>Home</h5>\n                </a>\n              </li>\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"index.html\">\n                <h5>Food Categories</h5>\n              </a>\n\n              <Select\n                styles={customStyles}\n                onChange={UpdateSelectedOption}\n                options={options}\n                width='200px'\n              />\n            </ul>\n\n            <div\n              className=\"justify-content-center d-flex\"\n              id=\"navbarSupportedContent\"\n            >\n              <form onSubmit={updateQuery} className=\"d-flex\">\n                <input\n                  className=\"form-control me-2\"\n                  type=\"search\"\n                  placeholder=\"Search\"\n                  aria-label=\"Search\"\n                  value={search}\n                  onChange={updateSearch}\n                />\n                <button className=\"btn btn-outline-success\" type=\"submit\">\n                  Search\n                </button>\n              </form>\n            </div>\n          </nav>\n          <div className=\"container mt-5\">\n            <div className=\"row justify-content-md-center row-cols-3\">\n              {recipes.map((recipe) => (\n                <div className=\"col\" key={recipe.recipe.label}>\n                  <Recipe\n                    title={recipe.recipe.label}\n                    calories={recipe.recipe.calories}\n                    image={recipe.recipe.image}\n                    ingredients={recipe.recipe.ingredients}\n                    url={recipe.recipe.url}\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}